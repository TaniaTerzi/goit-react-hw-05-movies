{"version":3,"file":"static/js/910.667371ae.chunk.js","mappings":"yNAwCA,UAnCA,WACI,OAA0BA,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KAGMC,GADWC,EAAAA,EAAAA,MACGC,QAqBpB,OApBAC,QAAQC,IAAIJ,IAEZK,EAAAA,EAAAA,YAAU,WAAK,wCACf,+GAE+BC,EAAAA,EAAAA,IAAA,6CACmBN,EADnB,YAEnB,CAACO,OAAQ,CAACC,QAAS,sCAJ/B,OAEcC,EAFd,OAOcC,EAAOD,EAASE,KAAKD,KAC3BP,QAAQC,IAAIM,GACZX,EAASW,GATjB,gDAWQP,QAAQS,MAAR,MAXR,0DADe,uBAAC,WAAD,wBAeXC,EACH,GAAE,CAACb,KAEG,gBAAKc,MAAO,CAACC,QAAS,OAAQC,SAAU,OAASC,IAAK,QAAtD,SACNnB,EAAMoB,KAAI,SAAAC,GACP,OAAO,4BACH,gBAAKC,IAAG,6CAAwCD,EAAKE,cAAgBC,IAAI,GAAGC,MAAO,OACnF,uBAAIJ,EAAKK,SAFIL,EAAKnB,GAIzB,KAEJ,C","sources":["components/Cast.js"],"sourcesContent":["import React from 'react';\nimport axios from \"axios\";\nimport { useState, useEffect } from 'react';\nimport { useParams } from \"react-router-dom\";\n\nfunction Cast() {\n    const [movie, setMovie] = useState([]);\n           \n    const idParams = useParams();\n    const id = idParams.movieId;\n    console.log(id);\n\n    useEffect(()=> {\n    async function getMovies() {\n        try {\n            const response = await axios.get(\n                `https://api.themoviedb.org/3/movie/${id}/credits`,\n                {params: {api_key: '3e5c06f36af27128c6066a7b0679e96b',},\n        }\n        );\n            const cast = response.data.cast;\n            console.log(cast)\n            setMovie(cast);           \n        } catch (error) {\n            console.error(error);\n        }\n        }\n        getMovies();\n    }, [id]);\n   \n    return <div style={{display: 'flex', flexWrap: 'wrap',  gap: '10px'}} >\n    {movie.map(item => {\n        return <div key={item.id}>\n            <img src={`https://image.tmdb.org/t/p/original${item.profile_path}`} alt=\"\" width={150}/>\n            <p>{item.name}</p>\n        </div>\n    })}\n    </div>\n} \n\nexport default Cast;\n"],"names":["useState","movie","setMovie","id","useParams","movieId","console","log","useEffect","axios","params","api_key","response","cast","data","error","getMovies","style","display","flexWrap","gap","map","item","src","profile_path","alt","width","name"],"sourceRoot":""}