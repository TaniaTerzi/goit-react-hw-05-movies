{"version":3,"file":"static/js/957.d40c6b0d.chunk.js","mappings":"iOAuEA,UAlEA,WACI,OAA0BA,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAwBJ,EAAAA,EAAAA,UAAS,IAAjC,eAAOK,EAAP,KAAaC,EAAb,KAIMC,GADWC,EAAAA,EAAAA,MACGC,QACpBC,QAAQC,IAAIJ,IAEZK,EAAAA,EAAAA,YAAU,WAAK,wCACf,mHAE+BC,EAAAA,EAAAA,IAAA,6CACmBN,GACtC,CAACO,OAAQ,CAACC,QAAS,sCAJ/B,OAEcC,EAFd,OAOcf,EAAQe,EAASC,KACjBd,EAAQa,EAASC,KAAKC,OACtBb,EAAOW,EAASC,KAAKE,aAE3BjB,EAASD,GACTG,EAASD,GACTG,EAAQD,GAbhB,kDAeQK,QAAQU,MAAR,MAfR,2DADe,uBAAC,WAAD,wBAmBXC,EACH,GAAE,CAACd,IAGJ,IAAMe,EAAOjB,EAAKkB,UAAU,EAAG,GAE/B,OAAO,kBAAMC,MAAO,CAACC,MAAO,UAArB,WACH,0BAAKxB,EAAMyB,MAAX,KAAoBJ,EAApB,QACA,gBACEK,IAAG,6CAAwC1B,EAAM2B,aACjDC,IAAI,GACJJ,MAAO,OAGL,yCAAiBxB,EAAM6B,aAE3B,wBACI,wCAED3B,EAAM4B,KAAI,SAAAC,GACT,OAAO,uBAAkBA,EAAKC,MAAfD,EAAKzB,GAAqB,KAC7C,2BACI,yBACI,SAAC,KAAD,CAAM2B,GAAG,OAAT,qBAIJ,yBACA,SAAC,KAAD,CAAOA,GAAG,UAAV,2BAKJ,SAAC,KAAD,MAEP,C","sources":["Pages/MovieDetails.js"],"sourcesContent":["import React from 'react';\nimport axios from \"axios\";\nimport {useState, useEffect } from 'react';\nimport {Link, Outlet, useParams} from \"react-router-dom\";\n\nfunction MovieDetails() {\n    const [movie, setMovie] = useState([]);\n    const [genre, setGenre] = useState([]);\n    const [date, setDate] = useState('');\n\n       \n    const idParams = useParams();\n    const id = idParams.movieId;\n    console.log(id);\n\n    useEffect(()=> {\n    async function getMovies() {\n        try {\n            const response = await axios.get(\n                `https://api.themoviedb.org/3/movie/${id}`,\n                {params: {api_key: '3e5c06f36af27128c6066a7b0679e96b',},\n        }\n        );\n            const movie = response.data;\n            const genre = response.data.genres;\n            const date = response.data.release_date;\n           \n            setMovie(movie);\n            setGenre(genre);\n            setDate(date);\n        } catch (error) {\n            console.error(error);\n        }\n        }\n        getMovies();\n    }, [id]);\n   \n\n    const year = date.substring(0, 4);\n\n    return <main style={{width: '1200px'}}>\n        <h2>{movie.title} ({year})</h2>\n        <img\n          src={`https://image.tmdb.org/t/p/original${movie.poster_path}`}\n          alt=\"\"\n          width={200}\n        />\n        \n            <span>Overview: {movie.overview}</span>\n        \n        <p>\n            <span>Genres:</span>\n          </p>\n          {genre.map(genr => {\n            return <p key={genr.id}>{genr.name}</p>;})}\n        <ul>\n            <li>\n                <Link to=\"cast\">\n                Cast\n                </Link>\n            </li>\n            <li>\n            <Link  to=\"revievs\">\n                Reviews\n            </Link>\n            </li>\n        </ul>\n        <Outlet/>\n    </main>\n}\n\nexport default MovieDetails;"],"names":["useState","movie","setMovie","genre","setGenre","date","setDate","id","useParams","movieId","console","log","useEffect","axios","params","api_key","response","data","genres","release_date","error","getMovies","year","substring","style","width","title","src","poster_path","alt","overview","map","genr","name","to"],"sourceRoot":""}