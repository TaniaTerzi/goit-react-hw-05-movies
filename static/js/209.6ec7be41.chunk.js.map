{"version":3,"file":"static/js/209.6ec7be41.chunk.js","mappings":"0OA2FA,UApFA,WAAmB,IAAD,EACd,GAA0BA,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAoCF,EAAAA,EAAAA,UAAS,IAA7C,eAAOG,EAAP,KAAmBC,EAAnB,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KAEMC,EAAK,UAAGF,EAAaG,IAAI,gBAApB,QAAgC,GAErCC,GAAWC,EAAAA,EAAAA,MAPH,wCA6Bd,WAAyBH,GAAzB,gGAE+BI,EAAAA,EAAAA,IAAA,0DACgCJ,GACvD,CAACK,OAAQ,CAACC,QAAS,sCAJ3B,cAEcC,EAFd,yBAOWA,EAASC,MAPpB,gCASQC,QAAQC,MAAR,MATR,yDA7Bc,wBAmDd,OA3CAD,QAAQE,IAAIT,EAASU,QAiCjBC,EAAAA,EAAAA,YAAU,WACFb,GA1CE,2CA2CJc,CAAUd,GAAOe,MAAK,SAAAC,GACpBtB,GAAS,OAAIsB,EAAKC,SACnB,GAEJ,GAAE,CAACjB,KAIH,4BAMH,kBAAMkB,SAxCa,SAAAC,GACnBA,EAAMC,iBAEoB,KAAtBzB,EAAW0B,QAIftB,EAA+B,KAAfJ,EAAoB,CAAEK,MAAOL,GAAe,CAAC,GAC7Dc,QAAQE,IAAI,eAAgBb,IAJ1BwB,MAAM,iCAKT,EA+BC,WACA,kBACEC,KAAK,OACLC,MAAO7B,EACP8B,SAlDe,SAAAN,GACjB,IAAQK,EAAUL,EAAMO,cAAhBF,MACR5B,EAAc4B,GACdf,QAAQE,IAAI,aAAca,EAC3B,KAgDC,mBAAQD,KAAK,SAAb,wBAEF,yBACG9B,EAAMkC,KAAI,SAAAC,GACT,OACE,gBAAIC,MAAO,CAACC,UAAW,OAAQC,OAAQ,WAAvC,WACI,SAAC,KAAD,CAEAC,GAAE,UAAKJ,EAAKK,IACVrB,MAAO,CAAEsB,KAAMhC,GAHjB,SAKC0B,EAAKO,QANV,MAAwDP,EAAKK,GAWhE,QAGR,C","sources":["Pages/Movies.js"],"sourcesContent":["import React from 'react';\nimport axios from \"axios\";\nimport {useState, useEffect} from 'react';\nimport {Link, useSearchParams, useLocation } from \"react-router-dom\";\n\n\n\nfunction Movies() {\n    const [movie, setMovie] = useState([]);\n    const [inputValue, setInputValue] = useState('');\n    const [searchParams, setSearchParams] = useSearchParams();\n\n    const query = searchParams.get('query') ?? '';\n\n    const location = useLocation();\n    console.log(location.state);\n    \n\n    const handleChange = event => {\n        const { value } = event.currentTarget;\n        setInputValue(value);\n        console.log('inputvalue', value);\n      };\n\n      const handleSubmit = event => {\n        event.preventDefault();\n    \n        if (inputValue.trim() === '') {\n          alert('Search query can not be empty.');\n          return;\n        }\n        setSearchParams(inputValue !== '' ? { query: inputValue } : {});\n        console.log('searchParams', searchParams);\n      };\n\n\n    async function getMovies(query) {\n        try {\n            const response = await axios.get(\n                `https://api.themoviedb.org/3/search/movie?query=${query}`,\n            {params: {api_key: '3e5c06f36af27128c6066a7b0679e96b',},\n        }\n        );\n        return response.data;\n        } catch (error) {\n            console.error(error);\n        }\n        }\n        useEffect(() => {\n            if (query) {\n              getMovies(query).then(resp => {\n                setMovie([...resp.results]);\n              });\n            }\n          }, [query]);\n\n\n\n    return <div>\n\n        {/* <Link to=\"/product/h-1\" state={{ from: location }}>\n          Navigate to product h-1\n        </Link>  */}\n\n        <form onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          value={inputValue}\n          onChange={handleChange}\n        />\n        <button type=\"submit\">search</button>\n      </form>\n      <div>\n        {movie.map(item => {\n          return (\n            <li style={{listStyle: 'none', margin: '5px 0 0'}} key={item.id}>\n                <Link\n                    \n                to={`${item.id}`}\n                  state={{ from: location }}\n                >\n                {item.title}\n            </Link>s \n            </li>\n           \n          );\n        })}\n      </div>\n    </div>\n} \n\nexport default Movies;"],"names":["useState","movie","setMovie","inputValue","setInputValue","useSearchParams","searchParams","setSearchParams","query","get","location","useLocation","axios","params","api_key","response","data","console","error","log","state","useEffect","getMovies","then","resp","results","onSubmit","event","preventDefault","trim","alert","type","value","onChange","currentTarget","map","item","style","listStyle","margin","to","id","from","title"],"sourceRoot":""}